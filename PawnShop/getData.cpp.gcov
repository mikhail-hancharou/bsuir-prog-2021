        -:    0:Source:getData.cpp
        -:    0:Graph:getData.gcno
        -:    0:Data:getData.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include "getData.h"
        -:    3:#include "client.h"
        -:    4:#include "dataList.h"
        -:    5:#include <fstream>
        -:    6:
        -:    7:using namespace std;
        -:    8:dataList dList;
        -:    9:clientList cList;
        -:   10:
function _Z7getDataNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 50% blocks executed 79%
        2:   11:int getData(string fileName)
        -:   12:{
        4:   13:    ifstream file(fileName);
        2:   13-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
        1:   13-block  1
call    4 returned 1
        2:   14:    if (!file)
        2:   14-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   14-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 1
        -:   15:    {
        1:   16:        cout << "ERROR. File isn't opened\n";
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17:        throw invalid_argument("No file");
        1:   17-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   17-block  1
call    4 returned 1
unconditional  5 taken 1
    $$$$$:   17-block  2
call    6 never executed
        -:   18:        return 0;
        -:   19:    }
        -:   20:    else 
        -:   21:    {
        1:   22:        cout << "File opened successfully\n";       
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   23:    }
        1:   24:    file >> dList.amount;
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:   25:    string NameEtc;
        1:   25-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   25-block  1
call    2 never executed
        -:   26:    int id;
        2:   27:    string goodName;
call    0 returned 1
call    1 returned 1
    $$$$$:   27-block  0
call    2 never executed
        -:   28:    int allPrice;
        -:   29:    int deposit;
        2:   30:    string deliveryData;
call    0 returned 1
call    1 returned 1
    $$$$$:   30-block  0
call    2 never executed
        2:   31:    string storageTime;
call    0 returned 1
call    1 returned 1
    $$$$$:   31-block  0
call    2 never executed
        2:   32:    string passport;
call    0 returned 1
call    1 returned 1
    $$$$$:   32-block  0
call    2 never executed
        2:   33:    string singUpData;
call    0 returned 1
call    1 returned 1
    $$$$$:   33-block  0
call    2 never executed
        1:   34:    string history;
call    0 returned 1
    $$$$$:   34-block  0
call    1 never executed
        7:   35:    for (int i = 0; i < dList.amount; i++)
unconditional  0 taken 1
        7:   35-block  0
branch  1 taken 6 (fallthrough)
branch  2 taken 1
        -:   36:    {
        6:   37:        file >> NameEtc;
        6:   37-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   38:        dList.NameEtc.push_back(NameEtc);
        6:   38-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   39:        file >> id;
        6:   39-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   40:        dList.id.push_back(id);
        6:   40-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   41:        file >> goodName;
        6:   41-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   42:        dList.goodName.push_back(goodName);
        6:   42-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   43:        file >> allPrice;
        6:   43-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   44:        dList.allPrice.push_back(allPrice);
        6:   44-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   45:        file >> deposit;
        6:   45-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   46:        dList.deposit.push_back(deposit);
        6:   46-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   47:        file >> deliveryData;
        6:   47-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   48:        dList.deliveryData.push_back(deliveryData);
        6:   48-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   49:        file >> storageTime;
        6:   49-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   50:        dList.storageTime.push_back(storageTime);
        6:   50-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   51:        dList.generalDeposit += deposit;
        6:   51-block  0
unconditional  0 taken 6
        -:   52:    }
        1:   53:    file >> cList.amount;
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        5:   54:    for (int i = 0; i < cList.amount; i++)
        1:   54-block  0
unconditional  0 taken 1
        5:   54-block  1
branch  1 taken 4 (fallthrough)
branch  2 taken 1
        4:   54-block  2
unconditional  3 taken 4
        -:   55:    {
        4:   56:        file >> NameEtc;
        4:   56-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   57:        cList.NameEtc.push_back(NameEtc);
        4:   57-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   58:        file >> passport;
        4:   58-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   59:        cList.passport.push_back(passport);
        4:   59-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   60:        file >> id;
        4:   60-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   61:        cList.id.push_back(id);
        4:   61-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   62:        file >> singUpData;
        4:   62-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   63:        cList.singUpData.push_back(singUpData);
        4:   63-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   64:        file >> history;
        4:   64-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   65:        cList.history.push_back(history);
        4:   65-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        -:   66:    }
        1:   67:    file.close();
        1:   67-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68:    return 1;
        1:   68-block  0
call    0 returned 1
        -:   69:}
        -:   70:
function _Z9showGoodsv called 2 returned 100% blocks executed 100%
        2:   71:int showGoods()
        -:   72:{
        2:   73:    auto it1 = dList.NameEtc.begin();
        2:   73-block  0
call    0 returned 2
        2:   74:    auto it2 = dList.id.begin();
call    0 returned 2
        2:   75:    auto it3 = dList.goodName.begin();
call    0 returned 2
        2:   76:    auto it4 = dList.allPrice.begin();
call    0 returned 2
        2:   77:    auto it5 = dList.deposit.begin();
call    0 returned 2
        2:   78:    auto it6 = dList.deliveryData.begin();
call    0 returned 2
        2:   79:    auto it7 = dList.storageTime.begin();
call    0 returned 2
       15:   80:    for (int i = 0; i < dList.amount; i++)
unconditional  0 taken 2
       15:   80-block  0
branch  1 taken 13 (fallthrough)
branch  2 taken 2
unconditional  3 taken 13
        -:   81:    {
       13:   82:        cout << "Name: " << *it1 << "; ";
       13:   82-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   82-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   82-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   83:        cout << "id: " <<  *it2 << "; ";
       13:   83-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   83-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   83-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   84:        cout << "Good name: "<< *it3 << "; ";
       13:   84-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   84-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   84-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   85:        cout << "Good price: " << *it4 << "; ";
       13:   85-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   85-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   85-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   86:        cout << "Deposit:" << *it5 << "; ";
       13:   86-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   86-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   86-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   87:        cout << "Delivery data: " << *it6 << "; ";
       13:   87-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   87-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   87-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   88:        cout << "Storage time: " << *it7 << "; ";
       13:   88-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   88-block  1
call    3 returned 13
call    4 returned 13
branch  5 taken 13 (fallthrough)
branch  6 taken 0 (throw)
       13:   88-block  2
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   89:        cout << endl;
       13:   89-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   90:        it1++; it2++; it3++; it4++; it5++; it6++; it7++;
       13:   90-block  0
call    0 returned 13
call    1 returned 13
call    2 returned 13
call    3 returned 13
call    4 returned 13
call    5 returned 13
call    6 returned 13
        -:   91:    }
        2:   92:    return dList.amount;
        2:   92-block  0
unconditional  0 taken 2
        2:   92-block  1
unconditional  1 taken 2
        -:   93:}
        -:   94:
function _Z11showClientsv called 2 returned 100% blocks executed 100%
        2:   95:int showClients()
        -:   96:{
        2:   97:    auto it11 = cList.NameEtc.begin();
        2:   97-block  0
call    0 returned 2
        2:   98:    auto it22 = cList.passport.begin();
call    0 returned 2
        2:   99:    auto it33 = cList.singUpData.begin();
call    0 returned 2
        2:  100:    auto it44 = cList.history.begin();
call    0 returned 2
        2:  101:    auto id = cList.id.begin();
call    0 returned 2
       11:  102:    for (int i = 0; i < cList.amount; i++)
unconditional  0 taken 2
       11:  102-block  0
branch  1 taken 9 (fallthrough)
branch  2 taken 2
unconditional  3 taken 9
        -:  103:    {
        9:  104:        cout << "Name: " << *it11 << "; ";
        9:  104-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  104-block  1
call    3 returned 9
call    4 returned 9
branch  5 taken 9 (fallthrough)
branch  6 taken 0 (throw)
        9:  104-block  2
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  105:        cout << "Passport: " << *it22 << "; ";
        9:  105-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  105-block  1
call    3 returned 9
call    4 returned 9
branch  5 taken 9 (fallthrough)
branch  6 taken 0 (throw)
        9:  105-block  2
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  106:        cout << "Id: " << *id << "; ";
        9:  106-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  106-block  1
call    3 returned 9
call    4 returned 9
branch  5 taken 9 (fallthrough)
branch  6 taken 0 (throw)
        9:  106-block  2
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  107:        cout << "Sing up data: " << *it33 << "; ";
        9:  107-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  107-block  1
call    3 returned 9
call    4 returned 9
branch  5 taken 9 (fallthrough)
branch  6 taken 0 (throw)
        9:  107-block  2
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  108:        cout << "History: " << *it44 << "; ";
        9:  108-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  108-block  1
call    3 returned 9
call    4 returned 9
branch  5 taken 9 (fallthrough)
branch  6 taken 0 (throw)
        9:  108-block  2
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  109:        cout << endl;
        9:  109-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:  110:        it11++; it22++; it33++; it44++; id++;
        9:  110-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
call    4 returned 9
        -:  111:    }
        2:  112:    return cList.amount;
        2:  112-block  0
unconditional  0 taken 2
        2:  112-block  1
unconditional  1 taken 2
        -:  113:}
        -:  114:
function _Z7setDataNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 89%
        1:  115:int setData(string fileName)
        -:  116:{
        1:  117:    ofstream file(fileName);
        1:  117-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  117-block  1
call    3 never executed
        1:  118:    if (!file)
        1:  118-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  118-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
        -:  119:    {
    #####:  120:        cout << "ERROR. File isn't opened\n";
    %%%%%:  120-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  121:        throw invalid_argument("No file");
    %%%%%:  121-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  121-block  1
call    4 never executed
unconditional  5 never executed
    $$$$$:  121-block  2
call    6 never executed
    #####:  122:        return 0;
    %%%%%:  122-block  0
unconditional  0 never executed
        -:  123:    }
        -:  124:    else
        -:  125:    {
        1:  126:        cout << "File opened successfully\n";
        1:  126-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  127:    }
        1:  128:    auto it1 = dList.NameEtc.begin();
        1:  128-block  0
call    0 returned 1
        1:  129:    auto it2 = dList.id.begin();
call    0 returned 1
        1:  130:    auto it3 = dList.goodName.begin();
call    0 returned 1
        1:  131:    auto it4 = dList.allPrice.begin();
call    0 returned 1
        1:  132:    auto it5 = dList.deposit.begin();
call    0 returned 1
        1:  133:    auto it6 = dList.deliveryData.begin();
call    0 returned 1
        1:  134:    auto it7 = dList.storageTime.begin();
call    0 returned 1
        1:  135:    file << dList.amount << endl;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  135-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        7:  136:    for (int i = 0; i < dList.amount; i++)
        1:  136-block  0
unconditional  0 taken 1
        7:  136-block  1
branch  1 taken 6 (fallthrough)
branch  2 taken 1
unconditional  3 taken 6
        -:  137:    {
        6:  138:        file << *it1 << " ";
        6:  138-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  138-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  139:        file << *it2 << " ";
        6:  139-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  139-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  140:        file << *it3 << " ";
        6:  140-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  140-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  141:        file << *it4 << " ";
        6:  141-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  141-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  142:        file << *it5 << " ";
        6:  142-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  142-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  143:        file << *it6 << " ";
        6:  143-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  143-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  144:        file << *it7 << " ";
        6:  144-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  144-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  145:        file << endl;
        6:  145-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:  146:        it1++; it2++; it3++; it4++; it5++; it6++; it7++;
        6:  146-block  0
call    0 returned 6
call    1 returned 6
call    2 returned 6
call    3 returned 6
call    4 returned 6
call    5 returned 6
call    6 returned 6
        -:  147:    }
        1:  148:    file << cList.amount << endl;
        1:  148-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  148-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  149:    auto it11 = cList.NameEtc.begin();
        1:  149-block  0
call    0 returned 1
        1:  150:    auto it22 = cList.passport.begin();
call    0 returned 1
        1:  151:    auto it33 = cList.id.begin();
call    0 returned 1
        1:  152:    auto it44 = cList.singUpData.begin();
call    0 returned 1
        1:  153:    auto it55 = cList.history.begin();
call    0 returned 1
        6:  154:    for (int i = 0; i < cList.amount; i++)
unconditional  0 taken 1
        6:  154-block  0
branch  1 taken 5 (fallthrough)
branch  2 taken 1
unconditional  3 taken 5
        -:  155:    {
        5:  156:        file << *it11 << " ";
        5:  156-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  156-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  157:        file << *it22 << " ";
        5:  157-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  157-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  158:        file << *it33 << " ";
        5:  158-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  158-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  159:        file << *it44 << " ";
        5:  159-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  159-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  160:        file << *it55 << " ";
        5:  160-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  160-block  1
call    4 returned 5
branch  5 taken 5 (fallthrough)
branch  6 taken 0 (throw)
        5:  161:        file << endl;
        5:  161-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:  162:        it11++; it22++; it33++; it44++; it55++;
        5:  162-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
call    3 returned 5
call    4 returned 5
        -:  163:    }
        1:  164:    file.close();
        1:  164-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  165:}
        1:  165-block  0
unconditional  0 taken 1
        -:  166:
function _Z8pushGoodiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS4_S4_ called 2 returned 100% blocks executed 42%
        2:  167:int pushGood(int yn = 0, int idd = 0, string goodNamee = "", int allPricee = 0, int depositt = 0, string deliveryDataa = "", string storageTimee = "")
        -:  168:{
        2:  169:    bool g = true;
        -:  170:    int n;
        -:  171:    int id, allPrice, deposit;
        4:  172:    string goodName, deliveryData, storageTime;
        2:  172-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:  172-block  1
call    3 returned 2
call    4 returned 2
call    5 returned 2
    $$$$$:  172-block  2
call    6 never executed
    $$$$$:  172-block  3
call    7 never executed
    $$$$$:  172-block  4
call    8 never executed
       2*:  173:    if (yn != 0 && idd != 0 && goodNamee != "" && allPricee != 0 && depositt != 0 && deliveryDataa != "" && storageTimee != "")
branch  0 taken 2 (fallthrough)
branch  1 taken 0
        2:  173-block  0
branch  2 taken 2 (fallthrough)
branch  3 taken 0
        2:  173-block  1
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
        2:  173-block  2
branch  7 taken 2 (fallthrough)
branch  8 taken 0
        2:  173-block  3
branch  9 taken 2 (fallthrough)
branch 10 taken 0
        2:  173-block  4
branch 11 taken 2 (fallthrough)
branch 12 taken 0
        2:  173-block  5
call   13 returned 2
branch 14 taken 2 (fallthrough)
branch 15 taken 0 (throw)
        2:  173-block  6
branch 16 taken 2 (fallthrough)
branch 17 taken 0
        2:  173-block  7
call   18 returned 2
branch 19 taken 2 (fallthrough)
branch 20 taken 0 (throw)
        2:  173-block  8
branch 21 taken 2 (fallthrough)
branch 22 taken 0
        2:  173-block  9
unconditional 23 taken 2
    %%%%%:  173-block 10
unconditional 24 never executed
        2:  173-block 11
branch 25 taken 2 (fallthrough)
branch 26 taken 0
        -:  174:    {
        2:  175:        if (yn == 1)
        2:  175-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:  176:        {
        1:  177:            g = false;
        1:  178:            n = yn; id = idd; goodName = goodNamee; allPrice = allPricee; deposit = depositt; deliveryData = deliveryDataa; storageTime = storageTimee;
        1:  178-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  178-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  178-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        -:  179:        }
        -:  180:        else
        -:  181:        {
        1:  182:            return 0;
        1:  182-block  0
unconditional  0 taken 1
        -:  183:        }
        -:  184:    }
       1*:  185:    while (g)
        1:  185-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  185-block  1
unconditional  2 never executed
        -:  186:    {
    #####:  187:        cout << "\nDo you have an account?(1.Yes 2.No)\n";
    %%%%%:  187-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  188:        cin >> n;
    %%%%%:  188-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  189:        if (n > 2 || n < 1)
    %%%%%:  189-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  189-block  1
branch  2 never executed
branch  3 never executed
        -:  190:        {
    #####:  191:            cout << "Try again\n";
    %%%%%:  191-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  192:        }
        -:  193:        else break;
        -:  194:    }
        1:  195:    if (n == 1)
        1:  195-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:  196:    {
        1:  197:        if (g)
        1:  197-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  198:        {
    #####:  199:            cout << "\nEnter your id: ";
    %%%%%:  199-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  200:            cin >> id;
    %%%%%:  200-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  201:        }
        1:  202:        bool exist = false;
        2:  203:        string NameEtc;
        1:  203-block  0
call    0 returned 1
        1:  203-block  1
call    1 returned 1
    $$$$$:  203-block  2
call    2 never executed
        1:  204:        auto itName = cList.NameEtc.begin();
call    0 returned 1
        1:  205:        auto itt = cList.history.begin();
call    0 returned 1
       1*:  206:        for (auto it = cList.id.begin(); it != cList.id.end(); it++)
call    0 returned 1
unconditional  1 taken 1
        1:  206-block  0
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
call    6 never executed
unconditional  7 never executed
        -:  207:        {
        1:  208:            if (*it == id)
        1:  208-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        -:  209:            {
        1:  210:                exist = true;
        1:  211:                NameEtc = *itName;
        1:  211-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  212:                break;
        1:  212-block  0
unconditional  0 taken 1
        -:  213:            }
    #####:  214:            itName++; itt++;
    %%%%%:  214-block  0
call    0 never executed
call    1 never executed
        -:  215:        }
        1:  216:        if (exist == false)
        1:  216-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  217:        {
    #####:  218:            cout << "There is no such id\n";
    %%%%%:  218-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  219:            return 0;
    %%%%%:  219-block  0
unconditional  0 never executed
        -:  220:        }
        1:  221:        if (g)
        1:  221-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  222:        {
    #####:  223:            cout << "\nEnter good name: ";
    %%%%%:  223-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  224:            cin >> goodName;
    %%%%%:  224-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  225:            *itt += goodName + "/";
    %%%%%:  225-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  225-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  225-block  2
call    7 never executed
    $$$$$:  225-block  3
call    8 never executed
    $$$$$:  225-block  4
unconditional  9 never executed
    #####:  226:            cout << "\nEnter all price of good: ";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  227:            cin >> allPrice;
    %%%%%:  227-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  228:            cout << "\nEnter deposit: ";
    %%%%%:  228-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  229:            cin >> deposit;
    %%%%%:  229-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  230:            cout << "\nEnter delivery data: ";
    %%%%%:  230-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  231:            cin >> deliveryData;
    %%%%%:  231-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  232:            cout << "\nEnter storage time: ";
    %%%%%:  232-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  233:            cin >> storageTime;
    %%%%%:  233-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  234:        }
        1:  235:        auto it2 = dList.id.begin();
        1:  235-block  0
call    0 returned 1
        1:  236:        dList.NameEtc.push_back(NameEtc);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  237:        dList.id.push_back(id);
        1:  237-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  238:        dList.goodName.push_back(goodName);
        1:  238-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  239:        dList.allPrice.push_back(allPrice);
        1:  239-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  240:        dList.deposit.push_back(deposit);
        1:  240-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  241:        dList.deliveryData.push_back(deliveryData);
        1:  241-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  242:        dList.storageTime.push_back(storageTime);
        1:  242-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  243:        dList.generalDeposit += deposit;
        1:  244:        dList.amount++;
        1:  245:        return 1;
        1:  245-block  0
unconditional  0 taken 1
        -:  246:    }
    #####:  247:    else if (n == 2)
    %%%%%:  247-block  0
branch  0 never executed
branch  1 never executed
        -:  248:    {
    #####:  249:        pushAccount("", "", "");
    %%%%%:  249-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  249-block  1
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  249-block  2
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  249-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  249-block  4
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
    $$$$$:  249-block  5
call   21 never executed
    $$$$$:  249-block  6
unconditional 22 never executed
    $$$$$:  249-block  7
call   23 never executed
    $$$$$:  249-block  8
unconditional 24 never executed
    $$$$$:  249-block  9
call   25 never executed
    $$$$$:  249-block 10
unconditional 26 never executed
    $$$$$:  249-block 11
call   27 never executed
    $$$$$:  249-block 12
unconditional 28 never executed
    $$$$$:  249-block 13
call   29 never executed
    $$$$$:  249-block 14
unconditional 30 never executed
    $$$$$:  249-block 15
call   31 never executed
    $$$$$:  249-block 16
unconditional 32 never executed
    #####:  250:        return 1;
unconditional  0 never executed
        -:  251:    }
        -:  252:    else
        -:  253:    {
    #####:  254:        return 0;
    %%%%%:  254-block  0
unconditional  0 never executed
        -:  255:    }
        -:  256:}
        -:  257:
function _Z11pushAccountNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_S4_ called 2 returned 100% blocks executed 66%
        2:  258:int pushAccount(string namee = "", string passportCode = "", string singData = "")
        -:  259:{
        2:  260:    bool g = true;
        4:  261:    string name; string passport; string singUpData;
        2:  261-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:  261-block  1
call    3 returned 2
call    4 returned 2
call    5 returned 2
    $$$$$:  261-block  2
call    6 never executed
    $$$$$:  261-block  3
call    7 never executed
    $$$$$:  261-block  4
call    8 never executed
       2*:  262:    if (namee != "" && passportCode != "" && singData != "")
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  262-block  0
branch  3 taken 2 (fallthrough)
branch  4 taken 0
        2:  262-block  1
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:  262-block  2
branch  8 taken 2 (fallthrough)
branch  9 taken 0
        2:  262-block  3
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  262-block  4
branch 13 taken 2 (fallthrough)
branch 14 taken 0
        2:  262-block  5
unconditional 15 taken 2
    %%%%%:  262-block  6
unconditional 16 never executed
        2:  262-block  7
branch 17 taken 2 (fallthrough)
branch 18 taken 0
        -:  263:    {
        2:  264:        g = false;
        2:  265:        name = namee; passport = passportCode; singUpData = singData;
        2:  265-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  265-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  265-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        -:  266:    }
        2:  267:    if (g)
        2:  267-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        -:  268:    {
    #####:  269:        cout << "\nEnter your name: ";
    %%%%%:  269-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  270:        cin >> name;
    %%%%%:  270-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  271:        cout << "\nEnter your passport code: ";
    %%%%%:  271-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  272:        cin >> passport;
    %%%%%:  272-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  273:    }
        8:  274:    for (auto it = cList.passport.begin(); it != cList.passport.end(); it++)
        2:  274-block  0
call    0 returned 2
unconditional  1 taken 2
        8:  274-block  1
call    2 returned 8
call    3 returned 8
branch  4 taken 7 (fallthrough)
branch  5 taken 1
        6:  274-block  2
call    6 returned 6
unconditional  7 taken 6
        -:  275:    {
        7:  276:        if (passport == *it)
        7:  276-block  0
call    0 returned 7
call    1 returned 7
branch  2 taken 1 (fallthrough)
branch  3 taken 6
        -:  277:        {
        1:  278:            cout << "\nThere is already an account with this passport\n";
        1:  278-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  279:            return 0;
        1:  279-block  0
unconditional  0 taken 1
        -:  280:        }
        -:  281:    }
        1:  282:    cList.NameEtc.push_back(name);
        1:  282-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  283:    cList.amount++;
        1:  284:    cList.passport.push_back(passport);
        1:  284-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  285:    if (g)
        1:  285-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  286:    {
    #####:  287:        cout << "\nEnter sing up data: ";
    %%%%%:  287-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  288:        cin >> singUpData;
    %%%%%:  288-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  289:    }
        1:  290:    int id = cList.amount;
        1:  291:    cList.id.push_back(id);
        1:  291-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  292:    cList.singUpData.push_back(singUpData);
        1:  292-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  293:    cList.history.push_back("");
        1:  293-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  293-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  293-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  293-block  3
call    9 never executed
    $$$$$:  293-block  4
unconditional 10 never executed
    $$$$$:  293-block  5
call   11 never executed
    $$$$$:  293-block  6
unconditional 12 never executed
        1:  294:    return 1;
unconditional  0 taken 1
        -:  295:}
        -:  296:
function _Z7getGoodiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 88%
        2:  297:int getGood(int idd = 0, string namee = "")
        -:  298:{
        2:  299:    bool g = true;
        -:  300:    int id;
        4:  301:    string goodName;
        2:  301-block  0
call    0 returned 2
        2:  301-block  1
call    1 returned 2
    $$$$$:  301-block  2
call    2 never executed
       2*:  302:    if (idd != 0 && namee != "")
branch  0 taken 2 (fallthrough)
branch  1 taken 0
        2:  302-block  0
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:  302-block  1
branch  5 taken 2 (fallthrough)
branch  6 taken 0
        2:  302-block  2
unconditional  7 taken 2
    %%%%%:  302-block  3
unconditional  8 never executed
        2:  302-block  4
branch  9 taken 2 (fallthrough)
branch 10 taken 0
        -:  303:    {
        2:  304:        g = false;
        2:  305:        id = idd; goodName = namee;
        2:  305-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:  306:    }
        2:  307:    if (g)
        2:  307-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        -:  308:    {
    #####:  309:        cout << "Enter your id: ";
    %%%%%:  309-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  310:        cin >> id;
    %%%%%:  310-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  311:        cout << "Enter good name: ";
    %%%%%:  311-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  312:        cin >> goodName;
    %%%%%:  312-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  313:    }
        2:  314:    auto it1 = dList.NameEtc.begin();
        2:  314-block  0
call    0 returned 2
        2:  315:    auto it2 = dList.id.begin();
call    0 returned 2
        2:  316:    auto it3 = dList.goodName.begin();
call    0 returned 2
        2:  317:    auto it4 = dList.allPrice.begin();
call    0 returned 2
        2:  318:    auto it5 = dList.deposit.begin();
call    0 returned 2
        2:  319:    auto it6 = dList.deliveryData.begin();
call    0 returned 2
        2:  320:    auto it7 = dList.storageTime.begin();
call    0 returned 2
       15:  321:    for (int i = 0; i < dList.amount; i++)
unconditional  0 taken 2
       15:  321-block  0
branch  1 taken 14 (fallthrough)
branch  2 taken 1
unconditional  3 taken 13
        -:  322:    {
       14:  323:        if (id == *it2 && goodName == *it3)
       14:  323-block  0
call    0 returned 14
branch  1 taken 2 (fallthrough)
branch  2 taken 12
        2:  323-block  1
call    3 returned 2
call    4 returned 2
branch  5 taken 1 (fallthrough)
branch  6 taken 1
        1:  323-block  2
unconditional  7 taken 1
       13:  323-block  3
unconditional  8 taken 13
       14:  323-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 13
        -:  324:        {
        1:  325:            dList.NameEtc.erase(it1);
        1:  325-block  0
call    0 returned 1
call    1 returned 1
        1:  326:            dList.id.erase(it2);
call    0 returned 1
call    1 returned 1
        1:  327:            dList.goodName.erase(it3);
call    0 returned 1
call    1 returned 1
        1:  328:            dList.allPrice.erase(it4);
call    0 returned 1
call    1 returned 1
        1:  329:            dList.deposit.erase(it5);
call    0 returned 1
call    1 returned 1
        1:  330:            dList.deliveryData.erase(it6);
call    0 returned 1
call    1 returned 1
        1:  331:            dList.storageTime.erase(it7);
call    0 returned 1
call    1 returned 1
        1:  332:            dList.amount--;
        1:  333:            cout << "\nYour good was erased\n";
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  334:            return 1;
        1:  334-block  0
unconditional  0 taken 1
        -:  335:        }
       13:  336:        it1++; it2++; it3++; it4++; it5++; it6++; it7++;
       13:  336-block  0
call    0 returned 13
call    1 returned 13
call    2 returned 13
call    3 returned 13
call    4 returned 13
call    5 returned 13
call    6 returned 13
        -:  337:    }
        1:  338:    cout << "\nThere is no such id";
        1:  338-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  339:    return 0;
        1:  339-block  0
unconditional  0 taken 1
        -:  340:}
        -:  341:
function _Z14CalculatePricev called 3 returned 100% blocks executed 100%
        3:  342:int CalculatePrice()
        -:  343:{
        3:  344:    int price = 0;
       22:  345:    for (auto it = dList.allPrice.begin(); it != dList.allPrice.end(); it++)
        3:  345-block  0
call    0 returned 3
unconditional  1 taken 3
       22:  345-block  1
call    2 returned 22
call    3 returned 22
branch  4 taken 19 (fallthrough)
branch  5 taken 3
        -:  346:    {
       19:  347:        price += *it;
       19:  347-block  0
call    0 returned 19
call    1 returned 19
unconditional  2 taken 19
        -:  348:    }
        3:  349:    return price;
        3:  349-block  0
unconditional  0 taken 3
        -:  350:}  
        -:  351:
function _Z15ProfitInBadCasev called 1 returned 100% blocks executed 100%
        1:  352:int ProfitInBadCase()
        -:  353:{
        1:  354:    int deposits = 0;
        7:  355:    for (auto it = dList.deposit.begin(); it != dList.deposit.end(); it++)
        1:  355-block  0
call    0 returned 1
unconditional  1 taken 1
        7:  355-block  1
call    2 returned 7
call    3 returned 7
branch  4 taken 6 (fallthrough)
branch  5 taken 1
        -:  356:    {
        6:  357:        deposits += *it;
        6:  357-block  0
call    0 returned 6
call    1 returned 6
unconditional  2 taken 6
        -:  358:    }
        1:  359:    int profit = CalculatePrice() - deposits;
        1:  359-block  0
call    0 returned 1
        1:  360:    return profit;
unconditional  0 taken 1
        -:  361:}
        -:  362:
function _Z16ProfitInGoodCasev called 2 returned 100% blocks executed 100%
        2:  363:int ProfitInGoodCase()
        -:  364:{
        2:  365:    int deposits = 0;
       15:  366:    for (auto it = dList.deposit.begin(); it != dList.deposit.end(); it++)
        2:  366-block  0
call    0 returned 2
unconditional  1 taken 2
       15:  366-block  1
call    2 returned 15
call    3 returned 15
branch  4 taken 13 (fallthrough)
branch  5 taken 2
        -:  367:    {
       13:  368:        deposits += *it;
       13:  368-block  0
call    0 returned 13
call    1 returned 13
unconditional  2 taken 13
        -:  369:    }
        2:  370:    return deposits * 1.25;
        2:  370-block  0
unconditional  0 taken 2
        -:  371:}
